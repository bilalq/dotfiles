#!/bin/bash

export PROMPT_DIRTRIM=2
export GIT_PS1_SHOWDIRTYSTATE=true

RED="\[\033[0;31m\]"
YELLOW="\[\033[0;33m\]"
GREEN="\[\033[0;32m\]"
BLUE="\[\033[0;34m\]"
LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
WHITE="\[\033[1;37m\]"
LIGHT_GRAY="\[\033[0;37m\]"
COLOR_NONE="\[\e[0m\]"

function parse_git_branch {
  if ! git rev-parse --git-dir &> /dev/null; then
    return
  fi

  BRANCH=$(git symbolic-ref -q --short HEAD)
  if [[ -z $BRANCH ]]; then
    echo "  detached @ $(git rev-parse --short HEAD)"
    return
  fi

  UPSTREAM=${1:-"@{u}"} #"
  LOCAL=$(git rev-parse @)
  REMOTE=$(git rev-parse "$UPSTREAM")
  BASE=$(git merge-base @ "$UPSTREAM")
  STATE="" # Haven't yet found a fast way to get dirty state

  if [[ $LOCAL = $REMOTE ]]; then
    ICON=""
  elif [[ $LOCAL = $BASE ]]; then
    ICON="↓"
  elif [[ $REMOTE = $BASE ]]; then
    ICON="↑"
  else
    ICON="↕"
  fi

  echo "  ${BRANCH}${ICON}${STATE}"
}

function prompt_func() {
  previous_return_value=$?;
  prompt="${TITLEBAR}${BLUE}[${BLUE}\w${LIGHT_GREEN}$(parse_git_branch)${BLUE}]${COLOR_NONE} "
  if test $previous_return_value -eq 0
  then
    PS1="${prompt}➔ "
  else
    PS1="${prompt}${RED}➔${COLOR_NONE} "
  fi
}

PROMPT_COMMAND=prompt_func
